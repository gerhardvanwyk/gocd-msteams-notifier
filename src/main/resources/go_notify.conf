gocd.msteams {
  # feature flag for notification plugin, turning this false will not post anything to Slack
  # quite useful while testing / debugging
  enabled = true
   # Enter full FQDN of your GoCD instance. We'll be sending links on your slack channel using this as the base uri.
  server-host = "http://localhost:5138"
  api-msteams-host = "http://msteams-server:8080/"
  login = "user1"
  password = "password1"
  api-token = "89777-987-098-9876543d2"


  #MsTeams : Add teams with channels and configure which pipelines they need to lister to
  msteams = [{
     team = 09-987
     display-name = "GoCD Build Bot"
     icon-url ="http://iconlib.com/brokonbuild"
     channels = ["https://outlook.office.com/webhook/81b9af87-00cb-4765-b01c-89538dc940ab@99f89b6f-cfa5-477b-8bb1-4bc291941324/IncomingWebhook/d9b0e483247c489abadfdd1165237237/447179b6-0360-46de-9928-b2e6ed89b519, "https://outlook.office.com/webhook/81b9af87-00cb-4765-b01c-89538dc940ab@99f89b6f-cfa5-477b-8bb1-4bc291941324/IncomingWebhook/09f94682baef4d0a9563ee9e5b1a4dfa/447179b6-0360-46de-9928-b2e6ed89b519"]
    pipelines = [{
      name = "gocd-slack-build-notifier"
      statuses = ["broken"]
    }, {
      name = "my-java-utils"
      stage = "build"
      # you can provide multiple values by separating them with | (pipe) symbol - failed|broken
      statuses = ["failed"]        # accepted values - failed / broken / fixed / passed / all
    }]
  }]

  display-console-log-links = true
  displayMaterialChanges = true
  #Stop processing on the first pipelne configuration that matches the regular expression, in a MsTeam config
  process-all-teams = true
  truncate-changes = true
  proxy {
    hostname = "localhost"
    port = "900"
    type = "http"
  }
}
